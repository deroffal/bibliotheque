name: Release

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branche
        uses: actions/checkout@master
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@master
        with:
          java-version: 17
          distribution: 'adopt'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Configure Git user
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B -U -P coverage clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=bibliotheque

      - name: Release & Publish
        run: mvn -B --settings settings.xml -Darguments="-Dmaven.javadoc.skip=true -DskipTests=true" release:clean release:prepare release:perform
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout tag
        id: checkout-tag
        run: |
          git checkout $(git describe --abbrev=0 --tags)
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "::set-output name=PROJECT_VERSION::$VERSION"

      - name: Build Docker
        run: mvn -B spring-boot:build-image -DskipTests=true

      - name: Push to DockerHub
        run: |
          PROJECT_VERSION=${{ steps.checkout-tag.outputs.PROJECT_VERSION }}
          echo "tag authentification"
          docker tag deroffal/bibliotheque-authentification:latest deroffal/bibliotheque-authentification:${PROJECT_VERSION}
          docker push deroffal/bibliotheque-authentification:${PROJECT_VERSION}
          docker push deroffal/bibliotheque-authentification:latest
          echo "tag livre"
          docker tag deroffal/bibliotheque-livre:latest deroffal/bibliotheque-livre:${PROJECT_VERSION}
          docker push deroffal/bibliotheque-livre:${PROJECT_VERSION}
          docker push deroffal/bibliotheque-livre:latest

      - name: Living documentation
        uses: actions/upload-artifact@v2
        with:
          name: living-documentation
          path: authentification/target/cukedoctor/
